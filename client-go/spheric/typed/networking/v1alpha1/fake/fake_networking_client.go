// SPDX-FileCopyrightText: 2024 Axel Christ and Spheric contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
	v1alpha1 "spheric.cloud/spheric/client-go/spheric/typed/networking/v1alpha1"
)

type FakeNetworkingV1alpha1 struct {
	*testing.Fake
}

func (c *FakeNetworkingV1alpha1) LoadBalancers(namespace string) v1alpha1.LoadBalancerInterface {
	return &FakeLoadBalancers{c, namespace}
}

func (c *FakeNetworkingV1alpha1) LoadBalancerRoutings(namespace string) v1alpha1.LoadBalancerRoutingInterface {
	return &FakeLoadBalancerRoutings{c, namespace}
}

func (c *FakeNetworkingV1alpha1) NATGateways(namespace string) v1alpha1.NATGatewayInterface {
	return &FakeNATGateways{c, namespace}
}

func (c *FakeNetworkingV1alpha1) Networks(namespace string) v1alpha1.NetworkInterface {
	return &FakeNetworks{c, namespace}
}

func (c *FakeNetworkingV1alpha1) NetworkInterfaces(namespace string) v1alpha1.NetworkInterfaceInterface {
	return &FakeNetworkInterfaces{c, namespace}
}

func (c *FakeNetworkingV1alpha1) NetworkPolicies(namespace string) v1alpha1.NetworkPolicyInterface {
	return &FakeNetworkPolicies{c, namespace}
}

func (c *FakeNetworkingV1alpha1) VirtualIPs(namespace string) v1alpha1.VirtualIPInterface {
	return &FakeVirtualIPs{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeNetworkingV1alpha1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
