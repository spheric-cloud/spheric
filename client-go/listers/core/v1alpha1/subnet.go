// SPDX-FileCopyrightText: 2024 Axel Christ and Spheric contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "spheric.cloud/spheric/api/core/v1alpha1"
)

// SubnetLister helps list Subnets.
// All objects returned here must be treated as read-only.
type SubnetLister interface {
	// List lists all Subnets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Subnet, err error)
	// Subnets returns an object that can list and get Subnets.
	Subnets(namespace string) SubnetNamespaceLister
	SubnetListerExpansion
}

// subnetLister implements the SubnetLister interface.
type subnetLister struct {
	listers.ResourceIndexer[*v1alpha1.Subnet]
}

// NewSubnetLister returns a new SubnetLister.
func NewSubnetLister(indexer cache.Indexer) SubnetLister {
	return &subnetLister{listers.New[*v1alpha1.Subnet](indexer, v1alpha1.Resource("subnet"))}
}

// Subnets returns an object that can list and get Subnets.
func (s *subnetLister) Subnets(namespace string) SubnetNamespaceLister {
	return subnetNamespaceLister{listers.NewNamespaced[*v1alpha1.Subnet](s.ResourceIndexer, namespace)}
}

// SubnetNamespaceLister helps list and get Subnets.
// All objects returned here must be treated as read-only.
type SubnetNamespaceLister interface {
	// List lists all Subnets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Subnet, err error)
	// Get retrieves the Subnet from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Subnet, error)
	SubnetNamespaceListerExpansion
}

// subnetNamespaceLister implements the SubnetNamespaceLister
// interface.
type subnetNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Subnet]
}
