// SPDX-FileCopyrightText: 2024 Axel Christ and Spheric contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "spheric.cloud/spheric/api/core/v1alpha1"
)

// DiskLister helps list Disks.
// All objects returned here must be treated as read-only.
type DiskLister interface {
	// List lists all Disks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Disk, err error)
	// Disks returns an object that can list and get Disks.
	Disks(namespace string) DiskNamespaceLister
	DiskListerExpansion
}

// diskLister implements the DiskLister interface.
type diskLister struct {
	listers.ResourceIndexer[*v1alpha1.Disk]
}

// NewDiskLister returns a new DiskLister.
func NewDiskLister(indexer cache.Indexer) DiskLister {
	return &diskLister{listers.New[*v1alpha1.Disk](indexer, v1alpha1.Resource("disk"))}
}

// Disks returns an object that can list and get Disks.
func (s *diskLister) Disks(namespace string) DiskNamespaceLister {
	return diskNamespaceLister{listers.NewNamespaced[*v1alpha1.Disk](s.ResourceIndexer, namespace)}
}

// DiskNamespaceLister helps list and get Disks.
// All objects returned here must be treated as read-only.
type DiskNamespaceLister interface {
	// List lists all Disks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Disk, err error)
	// Get retrieves the Disk from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Disk, error)
	DiskNamespaceListerExpansion
}

// diskNamespaceLister implements the DiskNamespaceLister
// interface.
type diskNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Disk]
}
