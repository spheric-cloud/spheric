// SPDX-FileCopyrightText: 2024 Axel Christ and Spheric contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1alpha1 "spheric.cloud/spheric/api/core/v1alpha1"
)

// DiskSpecApplyConfiguration represents an declarative configuration of the DiskSpec type for use
// with apply.
type DiskSpecApplyConfiguration struct {
	TypeRef     *LocalObjectReferenceApplyConfiguration `json:"typeRef,omitempty"`
	InstanceRef *LocalUIDReferenceApplyConfiguration    `json:"instanceRef,omitempty"`
	Resources   *corev1alpha1.ResourceList              `json:"resources,omitempty"`
}

// DiskSpecApplyConfiguration constructs an declarative configuration of the DiskSpec type for use with
// apply.
func DiskSpec() *DiskSpecApplyConfiguration {
	return &DiskSpecApplyConfiguration{}
}

// WithTypeRef sets the TypeRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TypeRef field is set to the value of the last call.
func (b *DiskSpecApplyConfiguration) WithTypeRef(value *LocalObjectReferenceApplyConfiguration) *DiskSpecApplyConfiguration {
	b.TypeRef = value
	return b
}

// WithInstanceRef sets the InstanceRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstanceRef field is set to the value of the last call.
func (b *DiskSpecApplyConfiguration) WithInstanceRef(value *LocalUIDReferenceApplyConfiguration) *DiskSpecApplyConfiguration {
	b.InstanceRef = value
	return b
}

// WithResources sets the Resources field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resources field is set to the value of the last call.
func (b *DiskSpecApplyConfiguration) WithResources(value corev1alpha1.ResourceList) *DiskSpecApplyConfiguration {
	b.Resources = &value
	return b
}
