// SPDX-FileCopyrightText: 2024 Axel Christ and Spheric contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// FleetSpecApplyConfiguration represents an declarative configuration of the FleetSpec type for use
// with apply.
type FleetSpecApplyConfiguration struct {
	ProviderID *string                   `json:"providerID,omitempty"`
	Taints     []TaintApplyConfiguration `json:"taints,omitempty"`
}

// FleetSpecApplyConfiguration constructs an declarative configuration of the FleetSpec type for use with
// apply.
func FleetSpec() *FleetSpecApplyConfiguration {
	return &FleetSpecApplyConfiguration{}
}

// WithProviderID sets the ProviderID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProviderID field is set to the value of the last call.
func (b *FleetSpecApplyConfiguration) WithProviderID(value string) *FleetSpecApplyConfiguration {
	b.ProviderID = &value
	return b
}

// WithTaints adds the given value to the Taints field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Taints field.
func (b *FleetSpecApplyConfiguration) WithTaints(values ...*TaintApplyConfiguration) *FleetSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithTaints")
		}
		b.Taints = append(b.Taints, *values[i])
	}
	return b
}
