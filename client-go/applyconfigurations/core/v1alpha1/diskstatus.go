// SPDX-FileCopyrightText: 2024 Axel Christ and Spheric contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	v1alpha1 "spheric.cloud/spheric/api/core/v1alpha1"
)

// DiskStatusApplyConfiguration represents an declarative configuration of the DiskStatus type for use
// with apply.
type DiskStatusApplyConfiguration struct {
	State                   *v1alpha1.DiskState           `json:"state,omitempty"`
	Access                  *DiskAccessApplyConfiguration `json:"access,omitempty"`
	LastStateTransitionTime *v1.Time                      `json:"lastStateTransitionTime,omitempty"`
}

// DiskStatusApplyConfiguration constructs an declarative configuration of the DiskStatus type for use with
// apply.
func DiskStatus() *DiskStatusApplyConfiguration {
	return &DiskStatusApplyConfiguration{}
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *DiskStatusApplyConfiguration) WithState(value v1alpha1.DiskState) *DiskStatusApplyConfiguration {
	b.State = &value
	return b
}

// WithAccess sets the Access field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Access field is set to the value of the last call.
func (b *DiskStatusApplyConfiguration) WithAccess(value *DiskAccessApplyConfiguration) *DiskStatusApplyConfiguration {
	b.Access = value
	return b
}

// WithLastStateTransitionTime sets the LastStateTransitionTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastStateTransitionTime field is set to the value of the last call.
func (b *DiskStatusApplyConfiguration) WithLastStateTransitionTime(value v1.Time) *DiskStatusApplyConfiguration {
	b.LastStateTransitionTime = &value
	return b
}
