// SPDX-FileCopyrightText: 2024 Axel Christ and Spheric contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "spheric.cloud/spheric/api/core/v1alpha1"
)

// FleetAddressApplyConfiguration represents a declarative configuration of the FleetAddress type for use
// with apply.
type FleetAddressApplyConfiguration struct {
	Type    *v1alpha1.FleetAddressType `json:"type,omitempty"`
	Address *string                    `json:"address,omitempty"`
}

// FleetAddressApplyConfiguration constructs a declarative configuration of the FleetAddress type for use with
// apply.
func FleetAddress() *FleetAddressApplyConfiguration {
	return &FleetAddressApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *FleetAddressApplyConfiguration) WithType(value v1alpha1.FleetAddressType) *FleetAddressApplyConfiguration {
	b.Type = &value
	return b
}

// WithAddress sets the Address field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Address field is set to the value of the last call.
func (b *FleetAddressApplyConfiguration) WithAddress(value string) *FleetAddressApplyConfiguration {
	b.Address = &value
	return b
}
